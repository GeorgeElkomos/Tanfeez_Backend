# Generated by Django 5.1.7 on 2025-09-03 12:47

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account_and_entitys', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='xx_UserLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('level_order', models.PositiveIntegerField(default=1, help_text='Order of the level for hierarchy')),
            ],
            options={
                'db_table': 'XX_USER_LEVEL_XX',
                'ordering': ['level_order'],
            },
        ),
        migrations.CreateModel(
            name='xx_User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=255, unique=True)),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('user', 'User'), ('superadmin', 'SuperAdmin')], max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=True)),
                ('can_transfer_budget', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('user_level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='user_management.xx_userlevel')),
            ],
            options={
                'db_table': 'XX_USER_XX',
            },
        ),
        migrations.CreateModel(
            name='xx_notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_system_read', models.BooleanField(default=False)),
                ('is_shown', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'XX_NOTIFICATION_XX',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='xx_UserAbility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Type', models.CharField(blank=True, choices=[('edit', 'edit'), ('approve', 'approve')], max_length=50, null=True)),
                ('Entity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_abilities', to='account_and_entitys.xx_entity')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='abilities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'XX_USER_ABILITY_XX',
                'unique_together': {('user', 'Entity', 'Type')},
            },
        ),
    ]
